{"version":3,"sources":["theme/GlobalStyle.js","theme/mainTheme.js","components/reducers/index.js","components/store/index.js","components/atoms/Button/Button.js","components/atoms/Input/Input.js","utils/calculateAmount.js","components/atoms/Paragraph/Paragraph.js","components/molecules/NewTransaction/NewTransaction.js","actions/index.js","components/atoms/Heading/Heading.js","components/molecules/TransactionList/TransactionList.js","components/molecules/ExchangeRate/ExchangeRate.js","components/molecules/BiggestTransaction/BiggestTransaction.js","views/Root/Root.js","index.js"],"names":["GlobalStyle","createGlobalStyle","theme","primary","orange","blue","initialState","exchangeRate","transactions","name","amount","rootReducer","state","action","type","filter","item","payload","transactionName","transactionAmount","calculatedAmount","newRate","store","createStore","reducer","window","__REDUX_DEVTOOLS_EXTENSION__","Button","styled","button","secondary","addButton","css","removeButton","Input","input","calculateAmount","toFixed","Paragraph","p","props","bold","NewTransaction","transactionNameInput","transactionValue","inputChange","e","setState","target","value","clear","this","addTransaction","calculated","onChange","placeholder","onClick","React","Component","connect","dispatch","addTransactionAction","Heading","h1","Wrapper","div","removeTransaction","removeTransactionAction","sum","map","Number","key","ExchangeRate","inputValue","changeRate","changeRateAction","biggest","reduce","max","current","TransactionWrapper","Root","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.362aec60.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Oswald:wght@400;600&display=swap');\n\n    *, *::before, *::after{\n        box-sizing: border-box;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        font-family: 'Oswald', sans-serif;\n    }\n\n    html{\n        font-size:62.5%;\n    }\n\n    body{\n        font-size: 1.6rem;\n    }\n`;\n\nexport default GlobalStyle;\n","export const theme = {\n  primary: '#303030',\n  orange: '#ff5a10',\n  blue: '#006ce6',\n};\n","const initialState = {\n  exchangeRate: 4.44,\n  transactions: [{ name: 'transaction one', amount: 0 }],\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'REMOVE_TRANSACTION':\n      return {\n        ...state,\n        transactions: [\n          ...state.transactions.filter((item) => item.name !== action.payload.transactionName),\n        ],\n      };\n    case 'ADD_TRANSACTION':\n      return {\n        ...state,\n        transactions: [\n          ...state.transactions,\n          {\n            name: action.payload.transactionName,\n            amount: action.payload.transactionAmount,\n            calculatedAmount: action.payload.calculatedAmount,\n          },\n        ],\n      };\n    case 'CHANGE_RATE':\n      return {\n        ...state,\n        exchangeRate: action.payload.newRate,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport reducer from 'components/reducers/index';\n\n/* eslint-disable no-underscore-dangle */\n    const store = createStore(\n    reducer, /* preloadedState, */\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n   );\n/* eslint-enable */\n\nexport default store;\n","import styled, { css } from 'styled-components';\n\nconst Button = styled.button`\n  background-color: ${({ secondary }) => (secondary ? '#ff5a10' : '#fff')};\n  width: 100px;\n  height: 30px;\n  font-size: 16px;\n  border-radius: 5px;\n  border: ${({ secondary }) => (secondary ? 'unset' : '1px solid #ff5a10')};\n  color: ${({ secondary }) => (secondary ? '#fff' : '#303030')};\n  text-transform: uppercase;\n  margin: 0 5px;\n\n  ${({ addButton }) =>\n    addButton &&\n    css`\n      width: 30px;\n      background-color: #64c632;\n      color: #fff;\n      border: unset;\n      border-radius: 50%;\n      &:hover {\n        transform: translateY(-3px);\n      }\n    `};\n\n  ${({ removeButton }) =>\n    removeButton &&\n    css`\n      width: 30px;\n      background-color: #ff5a10;\n      color: #fff;\n      border: unset;\n      border-radius: 50%;\n      &:hover {\n        transform: translateY(-3px);\n      }\n    `};\n\n  &:hover {\n    cursor: pointer;\n    box-shadow: 2px 4px 5px #303030;\n  }\n`;\n\nexport default Button;\n","import styled from 'styled-components';\n\nconst Input = styled.input`\n    padding:5px;\n    background-color: #F2F5F6;\n    border-radius:5px;\n`;\n\nexport default Input;","export const calculateAmount = (amount,exchangeRate) => (amount * exchangeRate).toFixed(2);","import styled from 'styled-components';\n\nconst Paragraph = styled.p`\n  color: ${(props) => props.theme.primary};\n  font-weight: ${(props) => (props.bold ? '600' : 'normal')};\n`;\n\nexport default Paragraph;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Button from 'components/atoms/Button/Button';\nimport Input from 'components/atoms/Input/Input';\nimport { calculateAmount } from 'utils/calculateAmount';\nimport { addTransaction as addTransactionAction } from 'actions/index';\nimport Paragraph from 'components/atoms/Paragraph/Paragraph';\n\nclass NewTransaction extends React.Component {\n  state = {\n    transactionNameInput: '',\n    transactionValue: '',\n  };\n\n  inputChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  clear = () => {\n    this.setState({\n      transactionNameInput: '',\n      transactionValue: '',\n    });\n  };\n\n  render() {\n    const { transactionValue, transactionNameInput } = this.state;\n    const { exchangeRate, addTransaction } = this.props;\n    const calculated = calculateAmount(transactionValue, exchangeRate);\n\n    return (\n      <div>\n        <Paragraph>Add New Transaction</Paragraph>\n        <Input\n          value={transactionNameInput}\n          type=\"text\"\n          name=\"transactionNameInput\"\n          onChange={(e) => this.inputChange(e)}\n          placeholder=\"name\"\n        />\n        <Input\n          value={transactionValue}\n          type=\"text\"\n          name=\"transactionValue\"\n          onChange={(e) => this.inputChange(e)}\n          placeholder=\"amount\"\n        />\n        <Button\n          onClick={() => {\n            addTransaction(transactionNameInput, transactionValue, calculated);\n            this.clear();\n          }}\n          addButton\n        >\n          +\n        </Button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return state;\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  addTransaction: (transactionName, transactionAmount, calculatedAmount) =>\n    dispatch(addTransactionAction(transactionName, transactionAmount, calculatedAmount)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewTransaction);\n","export const removeTransaction = (transactionName) => ({\n  type: 'REMOVE_TRANSACTION',\n  payload: {\n    transactionName,\n  },\n});\n\nexport const addTransaction = (transactionName, transactionAmount, calculatedAmount) => ({\n  type: 'ADD_TRANSACTION',\n  payload: {\n    transactionName,\n    transactionAmount,\n    calculatedAmount,\n  },\n});\n\nexport const changeRate = (newRate) => ({\n  type: 'CHANGE_RATE',\n  payload: {\n    newRate,\n  },\n});\n","import styled from 'styled-components';\n\nconst Heading = styled.h1`\n    font-size: 36px;\n`;\n\nexport default Heading;","import React from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport Paragraph from 'components/atoms/Paragraph/Paragraph';\nimport Button from 'components/atoms/Button/Button';\nimport { removeTransaction as removeTransactionAction } from 'actions';\nimport { calculateAmount } from 'utils/calculateAmount';\nimport Heading from 'components/atoms/Heading/Heading';\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst TransactionList = ({ exchangeRate, transactions, removeTransaction }) => {\n  let sum = 0;\n  return (\n    <div>\n      <Heading>Transaction List</Heading>\n      {transactions.map(({ amount, name }) => {\n        sum += Number(amount);\n        return (\n          <Wrapper key={name}>\n            <Paragraph>\n              {name} {amount} {calculateAmount(amount, exchangeRate)}\n            </Paragraph>\n            <Button onClick={() => removeTransaction(name)} removeButton>\n              -\n            </Button>\n          </Wrapper>\n        );\n      })}\n      <Paragraph bold>Transactions sum in EUR {sum}</Paragraph>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return state;\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  removeTransaction: (transactionName) => dispatch(removeTransactionAction(transactionName)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionList);\n","import React from 'react';\n\nimport { connect } from 'react-redux';\nimport Paragraph from 'components/atoms/Paragraph/Paragraph';\nimport Button from 'components/atoms/Button/Button';\nimport { changeRate as changeRateAction } from 'actions';\nimport Input from 'components/atoms/Input/Input';\n\nclass ExchangeRate extends React.Component {\n  state = {\n    inputValue: '',\n  };\n\n  inputChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  render() {\n    const { inputValue } = this.state;\n    const { changeRate, exchangeRate } = this.props;\n\n    return (\n      <div>\n        <Paragraph>Current Rate {exchangeRate}</Paragraph>\n        <Paragraph>Change Rate</Paragraph>\n        <Input\n          value={inputValue}\n          type=\"text\"\n          name=\"inputValue\"\n          onChange={(e) => this.inputChange(e)}\n        />\n        <Button onClick={() => changeRate(this.state.inputValue)}>OK</Button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return state;\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  changeRate: (newRate) => dispatch(changeRateAction(newRate)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExchangeRate);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Paragraph from 'components/atoms/Paragraph/Paragraph';\nimport styled from 'styled-components';\nimport { calculateAmount } from 'utils/calculateAmount';\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 50px;\n  flex-direction: column;\n`;\n\nconst BiggestTransaction = ({ transactions, exchangeRate }) => {\n  const biggest = transactions.reduce(\n    (max, current) => {\n      return current.amount >= max.amount ? current : max;\n    },\n    { amount: 0 },\n  );\n\n  return (\n    <Wrapper>\n      <Paragraph>Biggest Transaction</Paragraph>\n      <Paragraph>\n        {biggest.name} {biggest.amount} {calculateAmount(biggest.amount, exchangeRate)}\n      </Paragraph>\n    </Wrapper>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return state;\n};\n\nexport default connect(mapStateToProps)(BiggestTransaction);\n","import React from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\nimport GlobalStyle from 'theme/GlobalStyle';\nimport { Provider } from 'react-redux';\nimport { theme } from 'theme/mainTheme';\nimport store from 'components/store/index';\nimport NewTransaction from 'components/molecules/NewTransaction/NewTransaction';\nimport TransactionList from 'components/molecules/TransactionList/TransactionList';\nimport ExchangeRate from 'components/molecules/ExchangeRate/ExchangeRate';\nimport BiggestTransaction from 'components/molecules/BiggestTransaction/BiggestTransaction';\n\nconst TransactionWrapper = styled.div`\n  display: flex;\n`;\n\nfunction Root() {\n  return (\n    <Provider store={store}>\n      <GlobalStyle />\n      <ThemeProvider theme={theme}>\n        <ExchangeRate />\n        <NewTransaction />\n        <TransactionWrapper>\n          <TransactionList />\n          <BiggestTransaction />\n        </TransactionWrapper>\n      </ThemeProvider>\n    </Provider>\n  );\n}\n\nexport default Root;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from 'views/Root/Root';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}